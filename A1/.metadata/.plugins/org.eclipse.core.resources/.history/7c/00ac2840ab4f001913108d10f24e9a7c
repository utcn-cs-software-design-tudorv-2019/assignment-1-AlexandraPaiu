package Presentation;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.HPos;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;
import javafx.stage.Window;

public class UI extends Application {

	Stage stage;
	
	 @Override
	    public void start(Stage primaryStage) throws Exception {
		 	stage = primaryStage;
	        primaryStage.setTitle("Registration Form JavaFX Application");

	        // Create the registration form grid pane
	        GridPane gridPane = createRegistrationFormPane();
	        // Add UI controls to the registration form grid pane
	        addUIControls(gridPane);
	        // Create a scene with registration form grid pane as the root node
	        Scene scene = new Scene(gridPane, 800, 500);
	        // Set the scene in primary stage	
	        primaryStage.setScene(scene);
	        
	        primaryStage.show();
	    }


	    private GridPane createRegistrationFormPane() {
	        // Instantiate a new Grid Pane
	        GridPane gridPane = new GridPane();

	        // Position the pane at the center of the screen, both vertically and horizontally
	        gridPane.setAlignment(Pos.CENTER);

	        // Set a padding of 20px on each side
	        gridPane.setPadding(new Insets(40, 40, 40, 40));

	        // Set the horizontal gap between columns
	        gridPane.setHgap(10);

	        // Set the vertical gap between rows
	        gridPane.setVgap(10);

	        // Add Column Constraints

	        // columnOneConstraints will be applied to all the nodes placed in column one.
	        ColumnConstraints columnOneConstraints = new ColumnConstraints(100, 100, Double.MAX_VALUE);
	        columnOneConstraints.setHalignment(HPos.RIGHT);

	        // columnTwoConstraints will be applied to all the nodes placed in column two.
	        ColumnConstraints columnTwoConstrains = new ColumnConstraints(200,200, Double.MAX_VALUE);
	        columnTwoConstrains.setHgrow(Priority.ALWAYS);

	        gridPane.getColumnConstraints().addAll(columnOneConstraints, columnTwoConstrains);

	        return gridPane;
	    }

	    
	    private void addUIControlsScene(GridPane gridPane) {
	        // Add Header
	        Label headerLabel = new Label("Registration Form");
	        headerLabel.setFont(Font.font("Arial", FontWeight.BOLD, 24));
	        gridPane.add(headerLabel, 0,0,2,1);
	        GridPane.setHalignment(headerLabel, HPos.CENTER);
	        GridPane.setMargin(headerLabel, new Insets(20, 0,20,0));

	        // Add Email Label
	        Label emailLabel = new Label("Email ID : ");
	        gridPane.add(emailLabel, 0, 2);

	        // Add Email Text Field
	        TextField emailField = new TextField();
	        emailField.setPrefHeight(40);
	        gridPane.add(emailField, 1, 2);

	        // Add Password Label
	        Label passwordLabel = new Label("Password : ");
	        gridPane.add(passwordLabel, 0, 3);

	        // Add Password Field
	        PasswordField passwordField = new PasswordField();
	        passwordField.setPrefHeight(40);
	        gridPane.add(passwordField, 1, 3);

	        // Add LoginButton Button
	        Button LoginButton = new Button("Login");
	        LoginButton.setPrefHeight(40);
	        LoginButton.setDefaultButton(true);
	        LoginButton.setPrefWidth(100);
	        gridPane.add(LoginButton, 0, 4, 2, 1);
	        GridPane.setHalignment(LoginButton, HPos.LEFT);
	        GridPane.setMargin(LoginButton, new Insets(20, 0,20,0));

	        LoginButton.setOnAction(new EventHandler<ActionEvent>() {
	            @Override
	            public void handle(ActionEvent event) {
	            	
	            	GridPane gridPaneScene = createRegistrationFormPane();
	            	 addUIControls(gridPaneScene);
	            	
	            	
	                showAlert(Alert.AlertType.CONFIRMATION, gridPane.getScene().getWindow(), "Login Successful!", "Welcome " + emailField.getText());
	            }
	        });
	    

	    
	 // Add SigninButton Button
        Button SigninButton = new Button("Signin");
        SigninButton.setPrefHeight(40);
        SigninButton.setDefaultButton(true);
        SigninButton.setPrefWidth(100);
        gridPane.add(SigninButton, 0, 4, 2, 1);
        GridPane.setHalignment(SigninButton, HPos.RIGHT);
        GridPane.setMargin(SigninButton, new Insets(20, 0,20,0));

        SigninButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                if(emailField.getText().isEmpty()) {
                    showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!", "Please enter your email id");
                    return;
                }
                if(passwordField.getText().isEmpty()) {
                    showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!", "Please enter a password");
                    return;
                }

                showAlert(Alert.AlertType.CONFIRMATION, gridPane.getScene().getWindow(), "Signin Successful!", "Welcome " + emailField.getText());
            }
        });
    }
	    
	    private void addUIControls(GridPane gridPane) {
	        // Add Header
	        Label headerLabel = new Label("Registration Form");
	        headerLabel.setFont(Font.font("Arial", FontWeight.BOLD, 24));
	        gridPane.add(headerLabel, 0,0,2,1);
	        GridPane.setHalignment(headerLabel, HPos.CENTER);
	        GridPane.setMargin(headerLabel, new Insets(20, 0,20,0));

	        // Add Email Label
	        Label emailLabel = new Label("Email ID : ");
	        gridPane.add(emailLabel, 0, 2);

	        // Add Email Text Field
	        TextField emailField = new TextField();
	        emailField.setPrefHeight(40);
	        gridPane.add(emailField, 1, 2);

	        // Add Password Label
	        Label passwordLabel = new Label("Password : ");
	        gridPane.add(passwordLabel, 0, 3);

	        // Add Password Field
	        PasswordField passwordField = new PasswordField();
	        passwordField.setPrefHeight(40);
	        gridPane.add(passwordField, 1, 3);

	        // Add LoginButton Button
	        Button LoginButton = new Button("Login");
	        LoginButton.setPrefHeight(40);
	        LoginButton.setDefaultButton(true);
	        LoginButton.setPrefWidth(100);
	        gridPane.add(LoginButton, 0, 4, 2, 1);
	        GridPane.setHalignment(LoginButton, HPos.LEFT);
	        GridPane.setMargin(LoginButton, new Insets(20, 0,20,0));

	        LoginButton.setOnAction(new EventHandler<ActionEvent>() {
	            @Override
	            public void handle(ActionEvent event) {
	            	
	            	GridPane gridPaneScene = createRegistrationFormPane();
	            	addUIControlsScene(gridPaneScene);
	            	 
	            	Scene sceneNew = new Scene(gridPaneScene, 800, 500);	
	     	        stage.setScene(sceneNew);
	     	        
	     	        showAlert(Alert.AlertType.CONFIRMATION, gridPane.getScene().getWindow(), "Login Successful!", "Welcome " + emailField.getText());
	     	        stage.show();
	            	
	                
	            }
	        });
	    

	    
	 // Add SigninButton Button
        Button SigninButton = new Button("Signin");
        SigninButton.setPrefHeight(40);
        SigninButton.setDefaultButton(true);
        SigninButton.setPrefWidth(100);
        gridPane.add(SigninButton, 0, 4, 2, 1);
        GridPane.setHalignment(SigninButton, HPos.RIGHT);
        GridPane.setMargin(SigninButton, new Insets(20, 0,20,0));

        SigninButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                if(emailField.getText().isEmpty()) {
                    showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!", "Please enter your email id");
                    return;
                }
                if(passwordField.getText().isEmpty()) {
                    showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!", "Please enter a password");
                    return;
                }

                showAlert(Alert.AlertType.CONFIRMATION, gridPane.getScene().getWindow(), "Signin Successful!", "Welcome " + emailField.getText());
            }
        });
    }
	    
	    private void showAlert(Alert.AlertType alertType, Window owner, String title, String message) {
	        Alert alert = new Alert(alertType);
	        alert.setTitle(title);
	        alert.setHeaderText(null);
	        alert.setContentText(message);
	        alert.initOwner(owner);
	        alert.show();
	    }
	
	public static void main(String[] args) {
		launch(args);
	}

}
